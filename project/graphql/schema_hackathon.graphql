type Dissolving
  {
    materialInput: NamedThing!
    materialOutput: NamedThing!
    container: MaterialContainer!
    shakerSelection: Shaker!
    solvent: SolventEnum!
    volume: QuantityValue!
  }

type MaterialContainer
  {
    containerType: ContainerTypeEnum!
    size: QuantityValue!
  }

type MaterialEntity
  {
    id: String!
  }

type MatSampProc
  {
    collectedInto: MaterialContainer!
    materialInput: NamedThing!
    materialOutput: NamedThing!
    amount: QuantityValue!
  }

type NamedThing
  {
    id: String!
  }

type QuantityValue
  {
    hasValue: Float!
    hasUnit: String!
  }

type Shaker
  {
    shakeSpeed: QuantityValue
    shakeTime: QuantityValue
    shakerType: ShakerTypeEnum
  }

